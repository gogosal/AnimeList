<?xml version="1.0"?>
<doc>
    <assembly>
        <name>YoutubeExplode</name>
    </assembly>
    <members>
        <member name="T:YoutubeExplode.Channels.Channel">
            <summary>
            Metadata associated with a YouTube channel.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Channels.Channel.Id">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Channels.Channel.Url">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Channels.Channel.Title">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Channels.Channel.Thumbnails">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Channels.Channel.#ctor(YoutubeExplode.Channels.ChannelId,System.String,System.Collections.Generic.IReadOnlyList{YoutubeExplode.Common.Thumbnail})">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Channels.Channel" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Channels.Channel.ToString">
            <inheritdoc />
        </member>
        <member name="T:YoutubeExplode.Channels.ChannelClient">
            <summary>
            Operations related to YouTube channels.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Channels.ChannelClient.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Channels.ChannelClient" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Channels.ChannelClient.GetAsync(YoutubeExplode.Channels.ChannelId,System.Threading.CancellationToken)">
            <summary>
            Gets the metadata associated with the specified channel.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Channels.ChannelClient.GetByUserAsync(YoutubeExplode.Channels.UserName,System.Threading.CancellationToken)">
            <summary>
            Gets the metadata associated with the channel of the specified user.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Channels.ChannelClient.GetBySlugAsync(YoutubeExplode.Channels.ChannelSlug,System.Threading.CancellationToken)">
            <summary>
            Gets the metadata associated with the channel identified by the specified slug or legacy custom URL.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Channels.ChannelClient.GetByHandleAsync(YoutubeExplode.Channels.ChannelHandle,System.Threading.CancellationToken)">
            <summary>
            Gets the metadata associated with the channel identified by the specified handle or custom URL.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Channels.ChannelClient.GetUploadsAsync(YoutubeExplode.Channels.ChannelId,System.Threading.CancellationToken)">
            <summary>
            Enumerates videos uploaded by the specified channel.
            </summary>
        </member>
        <member name="T:YoutubeExplode.Channels.ChannelHandle">
            <summary>
            Represents a syntactically valid YouTube channel handle.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Channels.ChannelHandle.Value">
            <summary>
            Raw handle value.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Channels.ChannelHandle.ToString">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Channels.ChannelHandle.TryParse(System.String)">
            <summary>
            Attempts to parse the specified string as a YouTube channel handle or custom URL.
            Returns null in case of failure.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Channels.ChannelHandle.Parse(System.String)">
            <summary>
            Parses the specified string as a YouTube channel handle or custom URL.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Channels.ChannelHandle.op_Implicit(System.String)~YoutubeExplode.Channels.ChannelHandle">
            <summary>
            Converts string to channel handle.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Channels.ChannelHandle.op_Implicit(YoutubeExplode.Channels.ChannelHandle)~System.String">
            <summary>
            Converts channel handle to string.
            </summary>
        </member>
        <member name="T:YoutubeExplode.Channels.ChannelId">
            <summary>
            Represents a syntactically valid YouTube channel ID.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Channels.ChannelId.Value">
            <summary>
            Raw ID value.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Channels.ChannelId.ToString">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Channels.ChannelId.TryParse(System.String)">
            <summary>
            Attempts to parse the specified string as a YouTube channel ID or URL.
            Returns null in case of failure.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Channels.ChannelId.Parse(System.String)">
            <summary>
            Parses the specified string as a YouTube channel ID or URL.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Channels.ChannelId.op_Implicit(System.String)~YoutubeExplode.Channels.ChannelId">
            <summary>
            Converts string to ID.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Channels.ChannelId.op_Implicit(YoutubeExplode.Channels.ChannelId)~System.String">
            <summary>
            Converts ID to string.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Channels.ChannelId.Equals(YoutubeExplode.Channels.ChannelId)">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Channels.ChannelId.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Channels.ChannelId.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Channels.ChannelId.op_Equality(YoutubeExplode.Channels.ChannelId,YoutubeExplode.Channels.ChannelId)">
            <summary>
            Equality check.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Channels.ChannelId.op_Inequality(YoutubeExplode.Channels.ChannelId,YoutubeExplode.Channels.ChannelId)">
            <summary>
            Equality check.
            </summary>
        </member>
        <member name="T:YoutubeExplode.Channels.ChannelSlug">
            <summary>
            Represents a syntactically valid YouTube channel slug.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Channels.ChannelSlug.Value">
            <summary>
            Raw slug value.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Channels.ChannelSlug.ToString">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Channels.ChannelSlug.TryParse(System.String)">
            <summary>
            Attempts to parse the specified string as a YouTube channel slug or legacy custom URL.
            Returns null in case of failure.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Channels.ChannelSlug.Parse(System.String)">
            <summary>
            Parses the specified string as a YouTube channel slug or legacy custom url.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Channels.ChannelSlug.op_Implicit(System.String)~YoutubeExplode.Channels.ChannelSlug">
            <summary>
            Converts string to channel slug.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Channels.ChannelSlug.op_Implicit(YoutubeExplode.Channels.ChannelSlug)~System.String">
            <summary>
            Converts channel slug to string.
            </summary>
        </member>
        <member name="T:YoutubeExplode.Channels.IChannel">
            <summary>
            Properties shared by channel metadata resolved from different sources.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Channels.IChannel.Id">
            <summary>
            Channel ID.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Channels.IChannel.Url">
            <summary>
            Channel URL.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Channels.IChannel.Title">
            <summary>
            Channel title.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Channels.IChannel.Thumbnails">
            <summary>
            Channel thumbnails.
            </summary>
        </member>
        <member name="T:YoutubeExplode.Channels.UserName">
            <summary>
            Represents a syntactically valid YouTube user name.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Channels.UserName.Value">
            <summary>
            Raw user name value.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Channels.UserName.ToString">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Channels.UserName.TryParse(System.String)">
            <summary>
            Attempts to parse the specified string as a YouTube user name or profile URL.
            Returns null in case of failure.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Channels.UserName.Parse(System.String)">
            <summary>
            Parses the specified string as a YouTube user name or profile URL.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Channels.UserName.op_Implicit(System.String)~YoutubeExplode.Channels.UserName">
            <summary>
            Converts string to user name.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Channels.UserName.op_Implicit(YoutubeExplode.Channels.UserName)~System.String">
            <summary>
            Converts user name to string.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Channels.UserName.Equals(YoutubeExplode.Channels.UserName)">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Channels.UserName.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Channels.UserName.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Channels.UserName.op_Equality(YoutubeExplode.Channels.UserName,YoutubeExplode.Channels.UserName)">
            <summary>
            Equality check.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Channels.UserName.op_Inequality(YoutubeExplode.Channels.UserName,YoutubeExplode.Channels.UserName)">
            <summary>
            Equality check.
            </summary>
        </member>
        <member name="T:YoutubeExplode.Common.Author">
            <summary>
            Reference to a channel that owns a specific YouTube video or playlist.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Common.Author.ChannelId">
            <summary>
            Channel ID.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Common.Author.ChannelUrl">
            <summary>
            Channel URL.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Common.Author.ChannelTitle">
            <summary>
            Channel title.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Common.Author.Title">
            <inheritdoc cref="P:YoutubeExplode.Common.Author.ChannelTitle" />
        </member>
        <member name="M:YoutubeExplode.Common.Author.#ctor(YoutubeExplode.Channels.ChannelId,System.String)">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Common.Author" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Common.Author.ToString">
            <inheritdoc />
        </member>
        <member name="T:YoutubeExplode.Common.Batch`1">
            <summary>
            Generic collection of items returned by a single request.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Common.Batch`1.Items">
            <summary>
            Items included in the batch.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Common.Batch`1.#ctor(System.Collections.Generic.IReadOnlyList{`0})">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Common.Batch`1" />.
            </summary>
        </member>
        <member name="T:YoutubeExplode.Common.IBatchItem">
            <summary>
            Represents an item that can be included in <see cref="T:YoutubeExplode.Common.Batch`1" />.
            This interface is used as a marker to enable extension methods.
            </summary>
        </member>
        <member name="T:YoutubeExplode.Common.BatchItemExtensions">
            <summary>
            Extensions for <see cref="T:YoutubeExplode.Common.IBatchItem" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Common.BatchItemExtensions.CollectAsync``1(System.Collections.Generic.IAsyncEnumerable{``0})">
            <summary>
            Enumerates all items in the sequence and buffers them in memory.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Common.BatchItemExtensions.CollectAsync``1(System.Collections.Generic.IAsyncEnumerable{``0},System.Int32)">
            <summary>
            Enumerates a subset of items in the sequence and buffers them in memory.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Common.BatchItemExtensions.GetAwaiter``1(System.Collections.Generic.IAsyncEnumerable{``0})">
            <inheritdoc cref="M:YoutubeExplode.Common.BatchItemExtensions.CollectAsync``1(System.Collections.Generic.IAsyncEnumerable{``0})" />
        </member>
        <member name="T:YoutubeExplode.Common.Resolution">
            <summary>
            Resolution of an image or a video.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Common.Resolution.Width">
            <summary>
            Viewport width, measured in pixels.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Common.Resolution.Height">
            <summary>
            Viewport height, measured in pixels.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Common.Resolution.Area">
            <summary>
            Viewport area (i.e. width multiplied by height).
            </summary>
        </member>
        <member name="M:YoutubeExplode.Common.Resolution.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Common.Resolution" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Common.Resolution.ToString">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Common.Resolution.Equals(YoutubeExplode.Common.Resolution)">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Common.Resolution.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Common.Resolution.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Common.Resolution.op_Equality(YoutubeExplode.Common.Resolution,YoutubeExplode.Common.Resolution)">
            <summary>
            Equality check.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Common.Resolution.op_Inequality(YoutubeExplode.Common.Resolution,YoutubeExplode.Common.Resolution)">
            <summary>
            Equality check.
            </summary>
        </member>
        <member name="T:YoutubeExplode.Common.Thumbnail">
            <summary>
            Thumbnail image.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Common.Thumbnail.Url">
            <summary>
            Thumbnail URL.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Common.Thumbnail.Resolution">
            <summary>
            Thumbnail resolution.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Common.Thumbnail.#ctor(System.String,YoutubeExplode.Common.Resolution)">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Common.Thumbnail" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Common.Thumbnail.ToString">
            <inheritdoc />
        </member>
        <member name="T:YoutubeExplode.Common.ThumbnailExtensions">
            <summary>
            Extensions for <see cref="T:YoutubeExplode.Common.Thumbnail" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Common.ThumbnailExtensions.TryGetWithHighestResolution(System.Collections.Generic.IEnumerable{YoutubeExplode.Common.Thumbnail})">
            <summary>
            Gets the thumbnail with the highest resolution (by area).
            Returns null if the sequence is empty.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Common.ThumbnailExtensions.GetWithHighestResolution(System.Collections.Generic.IEnumerable{YoutubeExplode.Common.Thumbnail})">
            <summary>
            Gets the thumbnail with the highest resolution (by area).
            </summary>
        </member>
        <member name="T:YoutubeExplode.Exceptions.PlaylistUnavailableException">
            <summary>
            Exception thrown when the requested playlist is unavailable.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Exceptions.PlaylistUnavailableException.#ctor(System.String)">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Exceptions.PlaylistUnavailableException" />.
            </summary>
        </member>
        <member name="T:YoutubeExplode.Exceptions.RequestLimitExceededException">
            <summary>
            Exception thrown when YouTube denies a request because the client has exceeded rate limit.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Exceptions.RequestLimitExceededException.#ctor(System.String)">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Exceptions.RequestLimitExceededException" />.
            </summary>
        </member>
        <member name="T:YoutubeExplode.Exceptions.VideoRequiresPurchaseException">
            <summary>
            Exception thrown when the requested video requires purchase.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Exceptions.VideoRequiresPurchaseException.PreviewVideoId">
            <summary>
            ID of a free preview video which is used as promotion for the original video.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Exceptions.VideoRequiresPurchaseException.#ctor(System.String,YoutubeExplode.Videos.VideoId)">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Exceptions.VideoRequiresPurchaseException" />
            </summary>
        </member>
        <member name="T:YoutubeExplode.Exceptions.VideoUnavailableException">
            <summary>
            Exception thrown when the requested video is unavailable.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Exceptions.VideoUnavailableException.#ctor(System.String)">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Exceptions.VideoUnavailableException" />.
            </summary>
        </member>
        <member name="T:YoutubeExplode.Exceptions.VideoUnplayableException">
            <summary>
            Exception thrown when the requested video is unplayable.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Exceptions.VideoUnplayableException.#ctor(System.String)">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Exceptions.VideoUnplayableException" />.
            </summary>
        </member>
        <member name="T:YoutubeExplode.Exceptions.YoutubeExplodeException">
            <summary>
            Exception thrown within <see cref="N:YoutubeExplode" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Exceptions.YoutubeExplodeException.#ctor(System.String)">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Exceptions.YoutubeExplodeException" />.
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:YoutubeExplode.Playlists.IPlaylist">
            <summary>
            Properties shared by playlist metadata resolved from different sources.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Playlists.IPlaylist.Id">
            <summary>
            Playlist ID.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Playlists.IPlaylist.Url">
            <summary>
            Playlist URL.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Playlists.IPlaylist.Title">
            <summary>
            Playlist title.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Playlists.IPlaylist.Author">
            <summary>
            Playlist author.
            </summary>
            <remarks>
            May be null in case of auto-generated playlists (e.g. mixes, topics, etc).
            </remarks>
        </member>
        <member name="P:YoutubeExplode.Playlists.IPlaylist.Thumbnails">
            <summary>
            Playlist thumbnails.
            </summary>
        </member>
        <member name="T:YoutubeExplode.Playlists.Playlist">
            <summary>
            Metadata associated with a YouTube playlist.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Playlists.Playlist.Id">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Playlists.Playlist.Url">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Playlists.Playlist.Title">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Playlists.Playlist.Author">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Playlists.Playlist.Description">
            <summary>
            Playlist description.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Playlists.Playlist.Thumbnails">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Playlists.Playlist.#ctor(YoutubeExplode.Playlists.PlaylistId,System.String,YoutubeExplode.Common.Author,System.String,System.Collections.Generic.IReadOnlyList{YoutubeExplode.Common.Thumbnail})">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Playlists.Playlist" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Playlists.Playlist.ToString">
            <inheritdoc />
        </member>
        <member name="T:YoutubeExplode.Playlists.PlaylistClient">
            <summary>
            Operations related to YouTube playlists.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Playlists.PlaylistClient.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Playlists.PlaylistClient" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Playlists.PlaylistClient.GetAsync(YoutubeExplode.Playlists.PlaylistId,System.Threading.CancellationToken)">
            <summary>
            Gets the metadata associated with the specified playlist.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Playlists.PlaylistClient.GetVideoBatchesAsync(YoutubeExplode.Playlists.PlaylistId,System.Threading.CancellationToken)">
            <summary>
            Enumerates batches of videos included in the specified playlist.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Playlists.PlaylistClient.GetVideosAsync(YoutubeExplode.Playlists.PlaylistId,System.Threading.CancellationToken)">
            <summary>
            Enumerates videos included in the specified playlist.
            </summary>
        </member>
        <member name="T:YoutubeExplode.Playlists.PlaylistId">
            <summary>
            Represents a syntactically valid YouTube playlist ID.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Playlists.PlaylistId.Value">
            <summary>
            Raw ID value.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Playlists.PlaylistId.ToString">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Playlists.PlaylistId.TryParse(System.String)">
            <summary>
            Attempts to parse the specified string as a YouTube playlist ID or URL.
            Returns null in case of failure.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Playlists.PlaylistId.Parse(System.String)">
            <summary>
            Parses the specified string as a YouTube playlist ID or URL.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Playlists.PlaylistId.op_Implicit(System.String)~YoutubeExplode.Playlists.PlaylistId">
            <summary>
            Converts string to ID.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Playlists.PlaylistId.op_Implicit(YoutubeExplode.Playlists.PlaylistId)~System.String">
            <summary>
            Converts ID to string.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Playlists.PlaylistId.Equals(YoutubeExplode.Playlists.PlaylistId)">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Playlists.PlaylistId.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Playlists.PlaylistId.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Playlists.PlaylistId.op_Equality(YoutubeExplode.Playlists.PlaylistId,YoutubeExplode.Playlists.PlaylistId)">
            <summary>
            Equality check.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Playlists.PlaylistId.op_Inequality(YoutubeExplode.Playlists.PlaylistId,YoutubeExplode.Playlists.PlaylistId)">
            <summary>
            Equality check.
            </summary>
        </member>
        <member name="T:YoutubeExplode.Playlists.PlaylistVideo">
            <summary>
            Metadata associated with a YouTube video included in a playlist.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Playlists.PlaylistVideo.PlaylistId">
            <summary>
            ID of the playlist that contains this video.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Playlists.PlaylistVideo.Id">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Playlists.PlaylistVideo.Url">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Playlists.PlaylistVideo.Title">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Playlists.PlaylistVideo.Author">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Playlists.PlaylistVideo.Duration">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Playlists.PlaylistVideo.Thumbnails">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Playlists.PlaylistVideo.#ctor(YoutubeExplode.Playlists.PlaylistId,YoutubeExplode.Videos.VideoId,System.String,YoutubeExplode.Common.Author,System.Nullable{System.TimeSpan},System.Collections.Generic.IReadOnlyList{YoutubeExplode.Common.Thumbnail})">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Playlists.PlaylistVideo" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Playlists.PlaylistVideo.#ctor(YoutubeExplode.Videos.VideoId,System.String,YoutubeExplode.Common.Author,System.Nullable{System.TimeSpan},System.Collections.Generic.IReadOnlyList{YoutubeExplode.Common.Thumbnail})">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Playlists.PlaylistVideo" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Playlists.PlaylistVideo.ToString">
            <inheritdoc />
        </member>
        <member name="T:YoutubeExplode.Search.ChannelSearchResult">
            <summary>
            Metadata associated with a YouTube channel returned by a search query.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Search.ChannelSearchResult.Id">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Search.ChannelSearchResult.Url">
            <inheritdoc cref="P:YoutubeExplode.Channels.IChannel.Url" />
        </member>
        <member name="P:YoutubeExplode.Search.ChannelSearchResult.Title">
            <inheritdoc cref="P:YoutubeExplode.Channels.IChannel.Title" />
        </member>
        <member name="P:YoutubeExplode.Search.ChannelSearchResult.Thumbnails">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Search.ChannelSearchResult.#ctor(YoutubeExplode.Channels.ChannelId,System.String,System.Collections.Generic.IReadOnlyList{YoutubeExplode.Common.Thumbnail})">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Search.ChannelSearchResult" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Search.ChannelSearchResult.ToString">
            <inheritdoc />
        </member>
        <member name="T:YoutubeExplode.Search.ISearchResult">
            <summary>
            <p>
                Abstract result returned by a search query.
                Use pattern matching to handle specific instances of this type.
            </p>
            <p>
                Can be either one of the following:
                <list type="bullet">
                    <item><see cref="T:YoutubeExplode.Search.VideoSearchResult" /></item>
                    <item><see cref="T:YoutubeExplode.Search.PlaylistSearchResult" /></item>
                    <item><see cref="T:YoutubeExplode.Search.ChannelSearchResult" /></item>
                </list>
            </p>
            </summary>
        </member>
        <member name="P:YoutubeExplode.Search.ISearchResult.Url">
            <summary>
            Result URL.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Search.ISearchResult.Title">
            <summary>
            Result title.
            </summary>
        </member>
        <member name="T:YoutubeExplode.Search.PlaylistSearchResult">
            <summary>
            Metadata associated with a YouTube playlist returned by a search query.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Search.PlaylistSearchResult.Id">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Search.PlaylistSearchResult.Url">
            <inheritdoc cref="P:YoutubeExplode.Playlists.IPlaylist.Url" />
        </member>
        <member name="P:YoutubeExplode.Search.PlaylistSearchResult.Title">
            <inheritdoc cref="P:YoutubeExplode.Playlists.IPlaylist.Title" />
        </member>
        <member name="P:YoutubeExplode.Search.PlaylistSearchResult.Author">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Search.PlaylistSearchResult.Thumbnails">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Search.PlaylistSearchResult.#ctor(YoutubeExplode.Playlists.PlaylistId,System.String,YoutubeExplode.Common.Author,System.Collections.Generic.IReadOnlyList{YoutubeExplode.Common.Thumbnail})">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Search.PlaylistSearchResult" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Search.PlaylistSearchResult.ToString">
            <inheritdoc />
        </member>
        <member name="T:YoutubeExplode.Search.SearchClient">
            <summary>
            Operations related to YouTube search.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Search.SearchClient.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Search.SearchClient" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Search.SearchClient.GetResultBatchesAsync(System.String,YoutubeExplode.Search.SearchFilter,System.Threading.CancellationToken)">
            <summary>
            Enumerates batches of search results returned by the specified query.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Search.SearchClient.GetResultBatchesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Enumerates batches of search results returned by the specified query.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Search.SearchClient.GetResultsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Enumerates search results returned by the specified query.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Search.SearchClient.GetVideosAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Enumerates video search results returned by the specified query.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Search.SearchClient.GetPlaylistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Enumerates playlist search results returned by the specified query.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Search.SearchClient.GetChannelsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Enumerates channel search results returned by the specified query.
            </summary>
        </member>
        <member name="T:YoutubeExplode.Search.SearchFilter">
            <summary>
            Filter applied to a YouTube search query.
            </summary>
        </member>
        <member name="F:YoutubeExplode.Search.SearchFilter.None">
            <summary>
            No filter applied.
            </summary>
        </member>
        <member name="F:YoutubeExplode.Search.SearchFilter.Video">
            <summary>
            Only search for videos.
            </summary>
        </member>
        <member name="F:YoutubeExplode.Search.SearchFilter.Playlist">
            <summary>
            Only search for playlists.
            </summary>
        </member>
        <member name="F:YoutubeExplode.Search.SearchFilter.Channel">
            <summary>
            Only search for channels.
            </summary>
        </member>
        <member name="T:YoutubeExplode.Search.VideoSearchResult">
            <summary>
            Metadata associated with a YouTube video returned by a search query.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Search.VideoSearchResult.Id">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Search.VideoSearchResult.Url">
            <inheritdoc cref="P:YoutubeExplode.Videos.IVideo.Url" />
        </member>
        <member name="P:YoutubeExplode.Search.VideoSearchResult.Title">
            <inheritdoc cref="P:YoutubeExplode.Videos.IVideo.Title" />
        </member>
        <member name="P:YoutubeExplode.Search.VideoSearchResult.Author">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Search.VideoSearchResult.Duration">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Search.VideoSearchResult.Thumbnails">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Search.VideoSearchResult.#ctor(YoutubeExplode.Videos.VideoId,System.String,YoutubeExplode.Common.Author,System.Nullable{System.TimeSpan},System.Collections.Generic.IReadOnlyList{YoutubeExplode.Common.Thumbnail})">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Search.VideoSearchResult" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Search.VideoSearchResult.ToString">
            <inheritdoc />
        </member>
        <member name="T:YoutubeExplode.Videos.ClosedCaptions.ClosedCaption">
            <summary>
            Individual closed caption contained within a track.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.ClosedCaptions.ClosedCaption.Text">
            <summary>
            Text displayed by the caption.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.ClosedCaptions.ClosedCaption.Offset">
            <summary>
            Time at which the caption starts being displayed.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.ClosedCaptions.ClosedCaption.Duration">
            <summary>
            Duration of time for which the caption is displayed.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.ClosedCaptions.ClosedCaption.Parts">
            <summary>
            Caption parts (usually representing individual words).
            </summary>
            <remarks>
            May be empty because not all captions have parts.
            </remarks>
        </member>
        <member name="M:YoutubeExplode.Videos.ClosedCaptions.ClosedCaption.#ctor(System.String,System.TimeSpan,System.TimeSpan,System.Collections.Generic.IReadOnlyList{YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionPart})">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Videos.ClosedCaptions.ClosedCaption" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.ClosedCaptions.ClosedCaption.TryGetPartByTime(System.TimeSpan)">
            <summary>
            Gets the caption part displayed at the specified point in time, relative to the caption's own offset.
            Returns null if not found.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.ClosedCaptions.ClosedCaption.GetPartByTime(System.TimeSpan)">
            <summary>
            Gets the caption part displayed at the specified point in time, relative to the caption's own offset.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.ClosedCaptions.ClosedCaption.ToString">
            <inheritdoc />
        </member>
        <member name="T:YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionClient">
            <summary>
            Operations related to closed captions of YouTube videos.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionClient.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionClient" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionClient.GetManifestAsync(YoutubeExplode.Videos.VideoId,System.Threading.CancellationToken)">
            <summary>
            Gets the manifest that lists available closed caption tracks for the specified video.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionClient.GetAsync(YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionTrackInfo,System.Threading.CancellationToken)">
            <summary>
            Gets the closed caption track identified by the specified metadata.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionClient.WriteToAsync(YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionTrackInfo,System.IO.TextWriter,System.IProgress{System.Double},System.Threading.CancellationToken)">
            <summary>
            Writes the closed caption track identified by the specified metadata to the specified writer.
            </summary>
            <remarks>
            Closed captions are written in the SRT file format.
            </remarks>
        </member>
        <member name="M:YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionClient.DownloadAsync(YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionTrackInfo,System.String,System.IProgress{System.Double},System.Threading.CancellationToken)">
            <summary>
            Downloads the closed caption track identified by the specified metadata to the specified file.
            </summary>
            <remarks>
            Closed captions are written in the SRT file format.
            </remarks>
        </member>
        <member name="T:YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionManifest">
            <summary>
            Describes available closed caption tracks for a YouTube video.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionManifest.Tracks">
            <summary>
            Available closed caption tracks.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionManifest.#ctor(System.Collections.Generic.IReadOnlyList{YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionTrackInfo})">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionManifest" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionManifest.TryGetByLanguage(System.String)">
            <summary>
            Gets the closed caption track in the specified language (identified by ISO-639-1 code or display name).
            Returns null if not found.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionManifest.GetByLanguage(System.String)">
            <summary>
            Gets the closed caption track in the specified language (identified by ISO-639-1 code or display name).
            </summary>
        </member>
        <member name="T:YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionPart">
            <summary>
            Individual closed caption part contained within a track.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionPart.Text">
            <summary>
            Text displayed by the caption part.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionPart.Offset">
            <summary>
            Time at which the caption part starts being displayed (relative to the caption's own offset).
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionPart.#ctor(System.String,System.TimeSpan)">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionPart" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionPart.ToString">
            <inheritdoc />
        </member>
        <member name="T:YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionTrack">
            <summary>
            Contains closed captions in a specific language.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionTrack.Captions">
            <summary>
            Closed captions included in the track.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionTrack.#ctor(System.Collections.Generic.IReadOnlyList{YoutubeExplode.Videos.ClosedCaptions.ClosedCaption})">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionTrack" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionTrack.TryGetByTime(System.TimeSpan)">
            <summary>
            Gets the caption displayed at the specified point in time.
            Returns null if not found.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionTrack.GetByTime(System.TimeSpan)">
            <summary>
            Gets the caption displayed at the specified point in time.
            </summary>
        </member>
        <member name="T:YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionTrackInfo">
            <summary>
            Metadata associated with a closed caption track of a YouTube video.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionTrackInfo.Url">
            <summary>
            Track URL.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionTrackInfo.Language">
            <summary>
            Track language.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionTrackInfo.IsAutoGenerated">
            <summary>
            Whether the track was automatically generated.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionTrackInfo.#ctor(System.String,YoutubeExplode.Videos.ClosedCaptions.Language,System.Boolean)">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionTrackInfo" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.ClosedCaptions.ClosedCaptionTrackInfo.ToString">
            <inheritdoc />
        </member>
        <member name="T:YoutubeExplode.Videos.ClosedCaptions.Language">
            <summary>
            Language information.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.ClosedCaptions.Language.Code">
            <summary>
            ISO 639-1 code of the language.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.ClosedCaptions.Language.Name">
            <summary>
            Full international name of the language.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.ClosedCaptions.Language.#ctor(System.String,System.String)">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Videos.ClosedCaptions.Language" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.ClosedCaptions.Language.ToString">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Videos.ClosedCaptions.Language.Equals(YoutubeExplode.Videos.ClosedCaptions.Language)">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Videos.ClosedCaptions.Language.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Videos.ClosedCaptions.Language.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Videos.ClosedCaptions.Language.op_Equality(YoutubeExplode.Videos.ClosedCaptions.Language,YoutubeExplode.Videos.ClosedCaptions.Language)">
            <summary>
            Equality check.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.ClosedCaptions.Language.op_Inequality(YoutubeExplode.Videos.ClosedCaptions.Language,YoutubeExplode.Videos.ClosedCaptions.Language)">
            <summary>
            Equality check.
            </summary>
        </member>
        <member name="T:YoutubeExplode.Videos.Engagement">
            <summary>
            Engagement statistics.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Engagement.ViewCount">
            <summary>
            View count.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Engagement.LikeCount">
            <summary>
            Like count.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Engagement.DislikeCount">
            <summary>
            Dislike count.
            </summary>
            <remarks>
            YouTube no longer shows dislikes, so this value is always 0.
            </remarks>
        </member>
        <member name="P:YoutubeExplode.Videos.Engagement.AverageRating">
            <summary>
            Average rating.
            </summary>
            <remarks>
            YouTube no longer shows dislikes, so this value is always 5.
            </remarks>
        </member>
        <member name="M:YoutubeExplode.Videos.Engagement.#ctor(System.Int64,System.Int64,System.Int64)">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Videos.Engagement" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Engagement.ToString">
            <inheritdoc />
        </member>
        <member name="T:YoutubeExplode.Videos.IVideo">
            <summary>
            Properties shared by video metadata resolved from different sources.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.IVideo.Id">
            <summary>
            Video ID.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.IVideo.Url">
            <summary>
            Video URL.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.IVideo.Title">
            <summary>
            Video title.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.IVideo.Author">
            <summary>
            Video author.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.IVideo.Duration">
            <summary>
            Video duration.
            </summary>
            <remarks>
            May be null if the video is a currently ongoing live stream.
            </remarks>
        </member>
        <member name="P:YoutubeExplode.Videos.IVideo.Thumbnails">
            <summary>
            Video thumbnails.
            </summary>
        </member>
        <member name="T:YoutubeExplode.Videos.Streams.AudioOnlyStreamInfo">
            <summary>
            Metadata associated with an audio-only YouTube media stream.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.AudioOnlyStreamInfo.Url">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.AudioOnlyStreamInfo.Container">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.AudioOnlyStreamInfo.Size">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.AudioOnlyStreamInfo.Bitrate">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.AudioOnlyStreamInfo.AudioCodec">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.AudioOnlyStreamInfo.#ctor(System.String,YoutubeExplode.Videos.Streams.Container,YoutubeExplode.Videos.Streams.FileSize,YoutubeExplode.Videos.Streams.Bitrate,System.String)">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Videos.Streams.AudioOnlyStreamInfo" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.AudioOnlyStreamInfo.ToString">
            <inheritdoc />
        </member>
        <member name="T:YoutubeExplode.Videos.Streams.Bitrate">
            <summary>
            Bitrate.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.Bitrate.BitsPerSecond">
            <summary>
            Bitrate in bits per second.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.Bitrate.KiloBitsPerSecond">
            <summary>
            Bitrate in kilobits per second.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.Bitrate.MegaBitsPerSecond">
            <summary>
            Bitrate in megabits per second.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.Bitrate.GigaBitsPerSecond">
            <summary>
            Bitrate in gigabits per second
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.Bitrate.#ctor(System.Int64)">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Videos.Streams.Bitrate" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.Bitrate.ToString">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.Bitrate.CompareTo(YoutubeExplode.Videos.Streams.Bitrate)">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.Bitrate.Equals(YoutubeExplode.Videos.Streams.Bitrate)">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.Bitrate.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.Bitrate.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.Bitrate.op_Equality(YoutubeExplode.Videos.Streams.Bitrate,YoutubeExplode.Videos.Streams.Bitrate)">
            <summary>
            Equality check.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.Bitrate.op_Inequality(YoutubeExplode.Videos.Streams.Bitrate,YoutubeExplode.Videos.Streams.Bitrate)">
            <summary>
            Equality check.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.Bitrate.op_GreaterThan(YoutubeExplode.Videos.Streams.Bitrate,YoutubeExplode.Videos.Streams.Bitrate)">
            <summary>
            Comparison.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.Bitrate.op_LessThan(YoutubeExplode.Videos.Streams.Bitrate,YoutubeExplode.Videos.Streams.Bitrate)">
            <summary>
            Comparison.
            </summary>
        </member>
        <member name="T:YoutubeExplode.Videos.Streams.Container">
            <summary>
            Stream container.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.Container.Name">
            <summary>
            Container name (e.g. mp4, webm, etc).
            Can be used as file extension.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.Container.IsAudioOnly">
            <summary>
            Whether this container is a known audio-only container.
            </summary>
            <remarks>
            This property only refers to the container's capabilities and not its actual contents.
            If the container IS audio-only, it DOES NOT contain any video streams.
            If the container IS NOT audio-only, it MAY contain video streams, but is not required to.
            </remarks>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.Container.#ctor(System.String)">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Videos.Streams.Container" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.Container.ToString">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.Container.Mp3">
            <summary>
            MPEG-2 Audio Layer III (mp3).
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.Container.Mp4">
            <summary>
            MPEG-4 Part 14 (mp4).
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.Container.WebM">
            <summary>
            Web Media (webm).
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.Container.Tgpp">
            <summary>
            3rd Generation Partnership Project (3gpp).
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.Container.Equals(YoutubeExplode.Videos.Streams.Container)">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.Container.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.Container.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.Container.op_Equality(YoutubeExplode.Videos.Streams.Container,YoutubeExplode.Videos.Streams.Container)">
            <summary>
            Equality check.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.Container.op_Inequality(YoutubeExplode.Videos.Streams.Container,YoutubeExplode.Videos.Streams.Container)">
            <summary>
            Equality check.
            </summary>
        </member>
        <member name="T:YoutubeExplode.Videos.Streams.FileSize">
            <summary>
            File size.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.FileSize.Bytes">
            <summary>
            Size in bytes.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.FileSize.KiloBytes">
            <summary>
            Size in kilobytes.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.FileSize.MegaBytes">
            <summary>
            Size in megabytes.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.FileSize.GigaBytes">
            <summary>
            Size in gigabytes.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.FileSize.#ctor(System.Int64)">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Videos.Streams.FileSize" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.FileSize.ToString">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.FileSize.CompareTo(YoutubeExplode.Videos.Streams.FileSize)">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.FileSize.Equals(YoutubeExplode.Videos.Streams.FileSize)">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.FileSize.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.FileSize.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.FileSize.op_Equality(YoutubeExplode.Videos.Streams.FileSize,YoutubeExplode.Videos.Streams.FileSize)">
            <summary>
            Equality check.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.FileSize.op_Inequality(YoutubeExplode.Videos.Streams.FileSize,YoutubeExplode.Videos.Streams.FileSize)">
            <summary>
            Equality check.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.FileSize.op_GreaterThan(YoutubeExplode.Videos.Streams.FileSize,YoutubeExplode.Videos.Streams.FileSize)">
            <summary>
            Comparison.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.FileSize.op_LessThan(YoutubeExplode.Videos.Streams.FileSize,YoutubeExplode.Videos.Streams.FileSize)">
            <summary>
            Comparison.
            </summary>
        </member>
        <member name="T:YoutubeExplode.Videos.Streams.IAudioStreamInfo">
            <summary>
            Metadata associated with a media stream that contains audio.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.IAudioStreamInfo.AudioCodec">
            <summary>
            Audio codec.
            </summary>
        </member>
        <member name="T:YoutubeExplode.Videos.Streams.IStreamInfo">
            <summary>
            Metadata associated with a media stream of a YouTube video.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.IStreamInfo.Url">
            <summary>
            Stream URL.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.IStreamInfo.Container">
            <summary>
            Stream container.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.IStreamInfo.Size">
            <summary>
            Stream size.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.IStreamInfo.Bitrate">
            <summary>
            Stream bitrate.
            </summary>
        </member>
        <member name="T:YoutubeExplode.Videos.Streams.StreamInfoExtensions">
            <summary>
            Extensions for <see cref="T:YoutubeExplode.Videos.Streams.IStreamInfo" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.StreamInfoExtensions.TryGetWithHighestBitrate(System.Collections.Generic.IEnumerable{YoutubeExplode.Videos.Streams.IStreamInfo})">
            <summary>
            Gets the stream with the highest bitrate.
            Returns null if the sequence is empty.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.StreamInfoExtensions.GetWithHighestBitrate(System.Collections.Generic.IEnumerable{YoutubeExplode.Videos.Streams.IStreamInfo})">
            <summary>
            Gets the stream with the highest bitrate.
            </summary>
        </member>
        <member name="T:YoutubeExplode.Videos.Streams.IVideoStreamInfo">
            <summary>
            Metadata associated with a media stream that contains video.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.IVideoStreamInfo.VideoCodec">
            <summary>
            Video codec.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.IVideoStreamInfo.VideoQuality">
            <summary>
            Video quality.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.IVideoStreamInfo.VideoResolution">
            <summary>
            Video resolution.
            </summary>
        </member>
        <member name="T:YoutubeExplode.Videos.Streams.VideoStreamInfoExtensions">
            <summary>
            Extensions for <see cref="T:YoutubeExplode.Videos.Streams.IVideoStreamInfo" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.VideoStreamInfoExtensions.TryGetWithHighestVideoQuality(System.Collections.Generic.IEnumerable{YoutubeExplode.Videos.Streams.IVideoStreamInfo})">
            <summary>
            Gets the video stream with the highest video quality (including framerate).
            Returns null if the sequence is empty.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.VideoStreamInfoExtensions.GetWithHighestVideoQuality(System.Collections.Generic.IEnumerable{YoutubeExplode.Videos.Streams.IVideoStreamInfo})">
            <summary>
            Gets the video stream with the highest video quality (including framerate).
            </summary>
        </member>
        <member name="T:YoutubeExplode.Videos.Streams.MuxedStreamInfo">
            <summary>
            Metadata associated with a muxed (audio + video combined) media stream.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.MuxedStreamInfo.Url">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.MuxedStreamInfo.Container">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.MuxedStreamInfo.Size">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.MuxedStreamInfo.Bitrate">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.MuxedStreamInfo.AudioCodec">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.MuxedStreamInfo.VideoCodec">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.MuxedStreamInfo.VideoQuality">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.MuxedStreamInfo.VideoResolution">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.MuxedStreamInfo.#ctor(System.String,YoutubeExplode.Videos.Streams.Container,YoutubeExplode.Videos.Streams.FileSize,YoutubeExplode.Videos.Streams.Bitrate,System.String,System.String,YoutubeExplode.Videos.Streams.VideoQuality,YoutubeExplode.Common.Resolution)">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Videos.Streams.MuxedStreamInfo" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.MuxedStreamInfo.ToString">
            <inheritdoc />
        </member>
        <member name="T:YoutubeExplode.Videos.Streams.StreamClient">
            <summary>
            Operations related to media streams of YouTube videos.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.StreamClient.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Videos.Streams.StreamClient" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.StreamClient.GetManifestAsync(YoutubeExplode.Videos.VideoId,System.Threading.CancellationToken)">
            <summary>
            Gets the manifest that lists available streams for the specified video.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.StreamClient.GetHttpLiveStreamUrlAsync(YoutubeExplode.Videos.VideoId,System.Threading.CancellationToken)">
            <summary>
            Gets the HTTP Live Stream (HLS) manifest URL for the specified video (if it is a livestream).
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.StreamClient.GetAsync(YoutubeExplode.Videos.Streams.IStreamInfo,System.Threading.CancellationToken)">
            <summary>
            Gets the stream identified by the specified metadata.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.StreamClient.CopyToAsync(YoutubeExplode.Videos.Streams.IStreamInfo,System.IO.Stream,System.IProgress{System.Double},System.Threading.CancellationToken)">
            <summary>
            Copies the stream identified by the specified metadata to the specified stream.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.StreamClient.DownloadAsync(YoutubeExplode.Videos.Streams.IStreamInfo,System.String,System.IProgress{System.Double},System.Threading.CancellationToken)">
            <summary>
            Downloads the stream identified by the specified metadata to the specified file.
            </summary>
        </member>
        <member name="T:YoutubeExplode.Videos.Streams.StreamManifest">
            <summary>
            Describes available media streams for a YouTube video.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.StreamManifest.Streams">
            <summary>
            Available streams.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.StreamManifest.#ctor(System.Collections.Generic.IReadOnlyList{YoutubeExplode.Videos.Streams.IStreamInfo})">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Videos.Streams.StreamManifest" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.StreamManifest.GetAudioStreams">
            <summary>
            Gets streams that contain audio (i.e. muxed and audio-only streams).
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.StreamManifest.GetVideoStreams">
            <summary>
            Gets streams that contain video (i.e. muxed and video-only streams).
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.StreamManifest.GetMuxedStreams">
            <summary>
            Gets muxed streams (i.e. streams containing both audio and video).
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.StreamManifest.GetAudioOnlyStreams">
            <summary>
            Gets audio-only streams.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.StreamManifest.GetVideoOnlyStreams">
            <summary>
            Gets video-only streams.
            </summary>
        </member>
        <member name="T:YoutubeExplode.Videos.Streams.VideoOnlyStreamInfo">
            <summary>
            Metadata associated with a video-only media stream.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.VideoOnlyStreamInfo.Url">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.VideoOnlyStreamInfo.Container">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.VideoOnlyStreamInfo.Size">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.VideoOnlyStreamInfo.Bitrate">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.VideoOnlyStreamInfo.VideoCodec">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.VideoOnlyStreamInfo.VideoQuality">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.VideoOnlyStreamInfo.VideoResolution">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.VideoOnlyStreamInfo.#ctor(System.String,YoutubeExplode.Videos.Streams.Container,YoutubeExplode.Videos.Streams.FileSize,YoutubeExplode.Videos.Streams.Bitrate,System.String,YoutubeExplode.Videos.Streams.VideoQuality,YoutubeExplode.Common.Resolution)">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Videos.Streams.VideoOnlyStreamInfo" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.VideoOnlyStreamInfo.ToString">
            <inheritdoc />
        </member>
        <member name="T:YoutubeExplode.Videos.Streams.VideoQuality">
            <summary>
            Video stream quality.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.VideoQuality.Label">
            <summary>
            Quality label, as seen on YouTube (e.g. 1080p, 720p60, etc).
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.VideoQuality.MaxHeight">
            <summary>
            Maximum video height allowed by this quality (e.g. 1080 for 1080p60).
            Actual video height may be lower in some cases.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.VideoQuality.Framerate">
            <summary>
            Video framerate, measured in frames per second.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Streams.VideoQuality.IsHighDefinition">
            <summary>
            Whether this is a high definition video (i.e. 1080p or above).
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.VideoQuality.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Videos.Streams.VideoQuality" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.VideoQuality.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Videos.Streams.VideoQuality" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.VideoQuality.ToString">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.VideoQuality.CompareTo(YoutubeExplode.Videos.Streams.VideoQuality)">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.VideoQuality.Equals(YoutubeExplode.Videos.Streams.VideoQuality)">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.VideoQuality.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.VideoQuality.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.VideoQuality.op_Equality(YoutubeExplode.Videos.Streams.VideoQuality,YoutubeExplode.Videos.Streams.VideoQuality)">
            <summary>
            Equality check.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.VideoQuality.op_Inequality(YoutubeExplode.Videos.Streams.VideoQuality,YoutubeExplode.Videos.Streams.VideoQuality)">
            <summary>
            Equality check.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.VideoQuality.op_GreaterThan(YoutubeExplode.Videos.Streams.VideoQuality,YoutubeExplode.Videos.Streams.VideoQuality)">
            <summary>
            Comparison.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Streams.VideoQuality.op_LessThan(YoutubeExplode.Videos.Streams.VideoQuality,YoutubeExplode.Videos.Streams.VideoQuality)">
            <summary>
            Comparison.
            </summary>
        </member>
        <member name="T:YoutubeExplode.Videos.Video">
            <summary>
            Metadata associated with a YouTube video.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Video.Id">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Videos.Video.Url">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Videos.Video.Title">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Videos.Video.Author">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Videos.Video.UploadDate">
            <summary>
            Video upload date.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Video.Description">
            <summary>
            Video description.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Video.Duration">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Videos.Video.Thumbnails">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Videos.Video.Keywords">
            <summary>
            Available search keywords for the video.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.Video.Engagement">
            <summary>
            Engagement statistics for the video.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Video.#ctor(YoutubeExplode.Videos.VideoId,System.String,YoutubeExplode.Common.Author,System.DateTimeOffset,System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IReadOnlyList{YoutubeExplode.Common.Thumbnail},System.Collections.Generic.IReadOnlyList{System.String},YoutubeExplode.Videos.Engagement)">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Videos.Video" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.Video.ToString">
            <inheritdoc />
        </member>
        <member name="T:YoutubeExplode.Videos.VideoClient">
            <summary>
            Operations related to YouTube videos.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.VideoClient.Streams">
            <summary>
            Operations related to media streams of YouTube videos.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.VideoClient.ClosedCaptions">
            <summary>
            Operations related to closed captions of YouTube videos.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.VideoClient.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.Videos.VideoClient" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.VideoClient.GetAsync(YoutubeExplode.Videos.VideoId,System.Threading.CancellationToken)">
            <summary>
            Gets the metadata associated with the specified video.
            </summary>
        </member>
        <member name="T:YoutubeExplode.Videos.VideoId">
            <summary>
            Represents a syntactically valid YouTube video ID.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Videos.VideoId.Value">
            <summary>
            Raw ID value.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.VideoId.ToString">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Videos.VideoId.TryParse(System.String)">
            <summary>
            Attempts to parse the specified string as a video ID or URL.
            Returns null in case of failure.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.VideoId.Parse(System.String)">
            <summary>
            Parses the specified string as a YouTube video ID or URL.
            Throws an exception in case of failure.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.VideoId.op_Implicit(System.String)~YoutubeExplode.Videos.VideoId">
            <summary>
            Converts string to ID.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.VideoId.op_Implicit(YoutubeExplode.Videos.VideoId)~System.String">
            <summary>
            Converts ID to string.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.VideoId.Equals(YoutubeExplode.Videos.VideoId)">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Videos.VideoId.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Videos.VideoId.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Videos.VideoId.op_Equality(YoutubeExplode.Videos.VideoId,YoutubeExplode.Videos.VideoId)">
            <summary>
            Equality check.
            </summary>
        </member>
        <member name="M:YoutubeExplode.Videos.VideoId.op_Inequality(YoutubeExplode.Videos.VideoId,YoutubeExplode.Videos.VideoId)">
            <summary>
            Equality check.
            </summary>
        </member>
        <member name="T:YoutubeExplode.YoutubeClient">
            <summary>
            Client for interacting with YouTube.
            </summary>
        </member>
        <member name="P:YoutubeExplode.YoutubeClient.Videos">
            <summary>
            Operations related to YouTube videos.
            </summary>
        </member>
        <member name="P:YoutubeExplode.YoutubeClient.Playlists">
            <summary>
            Operations related to YouTube playlists.
            </summary>
        </member>
        <member name="P:YoutubeExplode.YoutubeClient.Channels">
            <summary>
            Operations related to YouTube channels.
            </summary>
        </member>
        <member name="P:YoutubeExplode.YoutubeClient.Search">
            <summary>
            Operations related to YouTube search.
            </summary>
        </member>
        <member name="M:YoutubeExplode.YoutubeClient.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.YoutubeClient" />.
            </summary>
        </member>
        <member name="M:YoutubeExplode.YoutubeClient.#ctor">
            <summary>
            Initializes an instance of <see cref="T:YoutubeExplode.YoutubeClient" />.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.AllowNullAttribute">
            <summary>
            Specifies that null is allowed as an input even if the corresponding type disallows it.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DisallowNullAttribute">
            <summary>
            Specifies that null is disallowed as an input even if the corresponding type allows it.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute">
            <summary>
            Applied to a method that will never return under any circumstance.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute">
            <summary>
            Specifies that the method will not return if the associated Boolean parameter is passed the specified value.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes the attribute with the specified parameter value.
            </summary>
            <param name="parameterValue">
            The condition parameter value. Code after the method will be considered unreachable
            by diagnostics if the argument to the associated parameter matches this value.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.ParameterValue">
            <summary>
            Gets the condition parameter value.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullAttribute">
            <summary>
            Specifies that an output may be null even if the corresponding type disallows it.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute">
            <summary>
            Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue"/>, the parameter may be null even if the corresponding type disallows it.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes the attribute with the specified return value condition.
            </summary>
            <param name="returnValue">The return value condition. If the method returns this value, the associated parameter may be null.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue">
            <summary>
            Gets the return value condition.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute">
            <summary>
            Specifies that the method or property will ensure that the listed field and property members have not-null values.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String)">
            <summary>
            Initializes the attribute with a field or property member.
            </summary>
            <param name="member">The field or property member that is promised to be not-null.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String[])">
            <summary>
            Initializes the attribute with the list of field and property members.
            </summary>
            <param name="members">The list of field and property members that are promised to be not-null.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.Members">
            <summary>
            Gets field or property member names.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute">
            <summary>
            Specifies that the method or property will ensure that the listed field and property
            members have not-null values when returning with the specified return value condition.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String)">
            <summary>
            Initializes the attribute with the specified return value condition and a field or property member.
            </summary>
            <param name="returnValue">The return value condition. If the method returns this value, the associated parameter will not be null.</param>
            <param name="member">The field or property member that is promised to be not-null.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String[])">
            <summary>
            Initializes the attribute with the specified return value condition and list of field and property members.
            </summary>
            <param name="returnValue">The return value condition. If the method returns this value, the associated parameter will not be null.</param>
            <param name="members">The list of field and property members that are promised to be not-null.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.ReturnValue">
            <summary>
            Gets the return value condition.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.Members">
            <summary>
            Gets field or property member names.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullAttribute">
            <summary>
            Specifies that an output will not be null even if the corresponding type allows it.
            Specifies that an input argument was not null when the call returns.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute">
            <summary>
            Specifies that the output will be non-null if the named parameter is non-null.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.#ctor(System.String)">
            <summary>
            Initializes the attribute with the associated parameter name.
            </summary>
            <param name="parameterName">The associated parameter name. The output will be non-null if the argument to the parameter specified is non-null.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.ParameterName">
            <summary>
            Gets the associated parameter name.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute">
            <summary>
            Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue"/>, the parameter will not be null even if the corresponding type allows it.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes the attribute with the specified return value condition.
            </summary>
            <param name="returnValue">The return value condition. If the method returns this value, the associated parameter will not be null.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue">
            <summary>Gets the return value condition.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.SetsRequiredMembersAttribute">
            <summary>
            Specifies that this constructor sets all required members for the current type,
            and callers do not need to set any required members themselves.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute">
            <summary>
            Specifies the syntax used in a string.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.#ctor(System.String)">
            <summary>
            Initializes the <see cref="T:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute"/> with the identifier of the syntax used.
            </summary>
            <param name="syntax">The syntax identifier.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.#ctor(System.String,System.Object[])">
            <summary>Initializes the <see cref="T:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute"/> with the identifier of the syntax used.</summary>
            <param name="syntax">The syntax identifier.</param>
            <param name="arguments">Optional arguments associated with the specific syntax employed.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Syntax">
            <summary>Gets the identifier of the syntax used.</summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Arguments">
            <summary>Optional arguments associated with the specific syntax employed.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.CompositeFormat">
            <summary>The syntax identifier for strings containing composite formats for string formatting.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.DateOnlyFormat">
            <summary>The syntax identifier for strings containing date format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.DateTimeFormat">
            <summary>The syntax identifier for strings containing date and time format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.EnumFormat">
            <summary>The syntax identifier for strings containing <see cref="T:System.Enum"/> format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.GuidFormat">
            <summary>The syntax identifier for strings containing <see cref="T:System.Guid"/> format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Json">
            <summary>The syntax identifier for strings containing JavaScript Object Notation (JSON).</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.NumericFormat">
            <summary>The syntax identifier for strings containing numeric format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Regex">
            <summary>The syntax identifier for strings containing regular expressions.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.TimeOnlyFormat">
            <summary>The syntax identifier for strings containing time format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.TimeSpanFormat">
            <summary>The syntax identifier for strings containing <see cref="T:System.TimeSpan"/> format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Uri">
            <summary>The syntax identifier for strings containing URIs.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Xml">
            <summary>The syntax identifier for strings containing XML.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.UnscopedRefAttribute">
            <summary>
            Used to indicate a byref escapes and is not scoped.
            </summary>
            <remarks>
            <para>
            There are several cases where the C# compiler treats a <see langword="ref"/> as implicitly
            <see langword="scoped"/> - where the compiler does not allow the <see langword="ref"/> to escape the method.
            </para>
            <para>
            For example:
            <list type="number">
                <item><see langword="this"/> for <see langword="struct"/> instance methods.</item>
                <item><see langword="ref"/> parameters that refer to <see langword="ref"/> <see langword="struct"/> types.</item>
                <item><see langword="out"/> parameters.</item>
            </list>
            </para>
            <para>
            This attribute is used in those instances where the <see langword="ref"/> should be allowed to escape.
            </para>
            <para>
            Applying this attribute, in any form, has impact on consumers of the applicable API. It is necessary for
            API authors to understand the lifetime implications of applying this attribute and how it may impact their users.
            </para>
            </remarks>
        </member>
        <member name="T:System.Index">
            <summary>Represent a type can be used to index a collection either from the start or the end.</summary>
            <remarks>
            Index is used by the C# compiler to support the new index syntax
            <code>
            int[] someArray = new int[5] { 1, 2, 3, 4, 5 } ;
            int lastElement = someArray[^1]; // lastElement = 5
            </code>
            </remarks>
        </member>
        <member name="M:System.Index.#ctor(System.Int32,System.Boolean)">
            <summary>Construct an Index using a value and indicating if the index is from the start or from the end.</summary>
            <param name="value">The index value. it has to be zero or positive number.</param>
            <param name="fromEnd">Indicating if the index is from the start or from the end.</param>
            <remarks>
            If the Index constructed from the end, index value 1 means pointing at the last element and index value 0 means pointing at beyond last element.
            </remarks>
        </member>
        <member name="P:System.Index.Start">
            <summary>Create an Index pointing at first element.</summary>
        </member>
        <member name="P:System.Index.End">
            <summary>Create an Index pointing at beyond last element.</summary>
        </member>
        <member name="M:System.Index.FromStart(System.Int32)">
            <summary>Create an Index from the start at the position indicated by the value.</summary>
            <param name="value">The index value from the start.</param>
        </member>
        <member name="M:System.Index.FromEnd(System.Int32)">
            <summary>Create an Index from the end at the position indicated by the value.</summary>
            <param name="value">The index value from the end.</param>
        </member>
        <member name="P:System.Index.Value">
            <summary>Returns the index value.</summary>
        </member>
        <member name="P:System.Index.IsFromEnd">
            <summary>Indicates whether the index is from the start or the end.</summary>
        </member>
        <member name="M:System.Index.GetOffset(System.Int32)">
            <summary>Calculate the offset from the start using the giving collection length.</summary>
            <param name="length">The length of the collection that the Index will be used with. length has to be a positive value</param>
            <remarks>
            For performance reason, we don't validate the input length parameter and the returned offset value against negative values.
            we don't validate either the returned offset is greater than the input length.
            It is expected Index will be used with collections which always have non negative length/count. If the returned offset is negative and
            then used to index a collection will get out of range exception which will be same affect as the validation.
            </remarks>
        </member>
        <member name="M:System.Index.Equals(System.Object)">
            <summary>Indicates whether the current Index object is equal to another object of the same type.</summary>
            <param name="value">An object to compare with this object</param>
        </member>
        <member name="M:System.Index.Equals(System.Index)">
            <summary>Indicates whether the current Index object is equal to another Index object.</summary>
            <param name="other">An object to compare with this object</param>
        </member>
        <member name="M:System.Index.GetHashCode">
            <summary>Returns the hash code for this instance.</summary>
        </member>
        <member name="M:System.Index.op_Implicit(System.Int32)~System.Index">
            <summary>Converts integer number to an Index.</summary>
        </member>
        <member name="M:System.Index.ToString">
            <summary>Converts the value of the current Index object to its equivalent string representation.</summary>
        </member>
        <member name="T:System.Range">
            <summary>Represent a range has start and end indexes.</summary>
            <remarks>
            Range is used by the C# compiler to support the range syntax.
            <code>
            int[] someArray = new int[5] { 1, 2, 3, 4, 5 };
            int[] subArray1 = someArray[0..2]; // { 1, 2 }
            int[] subArray2 = someArray[1..^0]; // { 2, 3, 4, 5 }
            </code>
            </remarks>
        </member>
        <member name="P:System.Range.Start">
            <summary>Represent the inclusive start index of the Range.</summary>
        </member>
        <member name="P:System.Range.End">
            <summary>Represent the exclusive end index of the Range.</summary>
        </member>
        <member name="M:System.Range.#ctor(System.Index,System.Index)">
            <summary>Construct a Range object using the start and end indexes.</summary>
            <param name="start">Represent the inclusive start index of the range.</param>
            <param name="end">Represent the exclusive end index of the range.</param>
        </member>
        <member name="M:System.Range.Equals(System.Object)">
            <summary>Indicates whether the current Range object is equal to another object of the same type.</summary>
            <param name="value">An object to compare with this object</param>
        </member>
        <member name="M:System.Range.Equals(System.Range)">
            <summary>Indicates whether the current Range object is equal to another Range object.</summary>
            <param name="other">An object to compare with this object</param>
        </member>
        <member name="M:System.Range.GetHashCode">
            <summary>Returns the hash code for this instance.</summary>
        </member>
        <member name="M:System.Range.ToString">
            <summary>Converts the value of the current Range object to its equivalent string representation.</summary>
        </member>
        <member name="M:System.Range.StartAt(System.Index)">
            <summary>Create a Range object starting from start index to the end of the collection.</summary>
        </member>
        <member name="M:System.Range.EndAt(System.Index)">
            <summary>Create a Range object starting from first element in the collection to the end Index.</summary>
        </member>
        <member name="P:System.Range.All">
            <summary>Create a Range object starting from first element to the end.</summary>
        </member>
        <member name="M:System.Range.GetOffsetAndLength(System.Int32)">
            <summary>Calculate the start offset and length of range object using a collection length.</summary>
            <param name="length">The length of the collection that the range will be used with. length has to be a positive value.</param>
            <remarks>
            For performance reason, we don't validate the input length parameter against negative values.
            It is expected Range will be used with collections which always have non negative length/count.
            We validate the range is inside the length scope though.
            </remarks>
        </member>
        <member name="T:System.Runtime.CompilerServices.CallerArgumentExpressionAttribute">
            <summary>
            An attribute that allows parameters to receive the expression of other parameters.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.CallerArgumentExpressionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.CallerArgumentExpressionAttribute"/> class.
            </summary>
            <param name="parameterName">The condition parameter value.</param>
        </member>
        <member name="P:System.Runtime.CompilerServices.CallerArgumentExpressionAttribute.ParameterName">
            <summary>
            Gets the parameter name the expression is retrieved from.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute">
            <summary>
            Indicates that compiler support for a particular feature is required for the location where this attribute is applied.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute"/> type.
            </summary>
            <param name="featureName">The name of the feature to indicate.</param>
        </member>
        <member name="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.FeatureName">
            <summary>
            The name of the compiler feature.
            </summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.IsOptional">
            <summary>
            If true, the compiler can choose to allow access to the location where this attribute is applied if it does not understand <see cref="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.FeatureName"/>.
            </summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.RefStructs">
            <summary>
            The <see cref="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.FeatureName"/> used for the ref structs C# feature.
            </summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.RequiredMembers">
            <summary>
            The <see cref="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.FeatureName"/> used for the required members C# feature.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute">
            <summary>
            Indicates which arguments to a method involving an interpolated string handler should be passed to that handler.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute"/> class.
            </summary>
            <param name="argument">The name of the argument that should be passed to the handler.</param>
            <remarks><see langword="null"/> may be used as the name of the receiver in an instance method.</remarks>
        </member>
        <member name="M:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute"/> class.
            </summary>
            <param name="arguments">The names of the arguments that should be passed to the handler.</param>
            <remarks><see langword="null"/> may be used as the name of the receiver in an instance method.</remarks>
        </member>
        <member name="P:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute.Arguments">
            <summary>
            Gets the names of the arguments that should be passed to the handler.
            </summary>
            <remarks><see langword="null"/> may be used as the name of the receiver in an instance method.</remarks>
        </member>
        <member name="T:System.Runtime.CompilerServices.InterpolatedStringHandlerAttribute">
            <summary>
            Indicates the attributed type is to be used as an interpolated string handler.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.IsExternalInit">
            <summary>
            Reserved to be used by the compiler for tracking metadata.
            This class should not be used by developers in source code.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.ModuleInitializerAttribute">
             <summary>
             Used to indicate to the compiler that a method should be called
             in its containing module's initializer.
             </summary>
             <remarks>
             When one or more valid methods
             with this attribute are found in a compilation, the compiler will
             emit a module initializer which calls each of the attributed methods.
            
             Certain requirements are imposed on any method targeted with this attribute:
             - The method must be `static`.
             - The method must be an ordinary member method, as opposed to a property accessor, constructor, local function, etc.
             - The method must be parameterless.
             - The method must return `void`.
             - The method must not be generic or be contained in a generic type.
             - The method's effective accessibility must be `internal` or `public`.
            
             The specification for module initializers in the .NET runtime can be found here:
             https://github.com/dotnet/runtime/blob/main/docs/design/specs/Ecma-335-Augments.md#module-initializer
             </remarks>
        </member>
        <member name="T:System.Runtime.CompilerServices.RequiredMemberAttribute">
            <summary>
            Specifies that a type has required members or that a member is required.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.SkipLocalsInitAttribute">
            <summary>
            Used to indicate to the compiler that the <c>.locals init</c> flag should not be set in method headers.
            </summary>
        </member>
        <member name="M:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute"/> class.
            </summary>
        </member>
        <member name="M:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute"/> class with the specified message.
            </summary>
            <param name="message">An optional message associated with this attribute instance.</param>
        </member>
        <member name="P:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute.Message">
            <summary>
            Returns the optional message associated with this attribute instance.
            </summary>
        </member>
        <member name="P:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute.Url">
            <summary>
            Returns the optional URL associated with this attribute instance.
            </summary>
        </member>
    </members>
</doc>
